<script type="text/javascript">
//<![CDATA[
L.require('ui').then(function(ui) {
	L.require('dom').then(function(dom) {
		L.require("uci").then(function(uci) {
			uci.load("netping_luci_relay_adapter_http").then(function(out){
				var UIAdapterHTTP = ui.AbstractElement.extend(/** @lends LuCI.ui.Textarea.prototype */ {
					__init__: function(relay_id) {

						this.fields = {};
						this.adapter_id = relay_id;
						this.needsToSave = false;
						this.isActive = false;

						// -------------------------------------------------------
						// Change the protocol name, config, and form fields below
						//--------------------------------------------------------
						this.proto = "HTTP"
						this.config = "netping_luci_relay_adapter_http"
						//--------------------------------------------------------

						var section = this.addSection();

						this.fields = {
							"hostport": new ui.Textfield(section["hostport"], { 
								maxlength: 128, 
								datatype: "hostport"
							}),

							"login": new ui.TextFieldStyled(section["login"], { 
								datatype: "rangelength(3,8)",
								htmlStyle: "width: 150px"
							}),

							"password": new ui.TextFieldStyled(section["password"], { 
								password: true,
								datatype: "rangelength(4,16)",
								htmlStyle: "width: 96px"
							})
						}
						//--------------------------------------------------------
					},

					/** @override */
					render: function() {
						var classActive = (this.isActive) ? ' active' : ''
						var container = E('div', { class: 'table modal-section-param adapter http' + classActive}, [
							E('div', {class: 'tr table-titles'}, [
								E('div', {class: 'th', style: 'width: 100%'}, _("Параметры протокола " + this.proto)),
								E('div', {class: 'th', style: "text-align: right;"}, _("Значение")),
							]),
							E('div', {class: 'tr cbi-rowstyle-1'}, [
								E('div', {class: 'td'}, "Адрес/порт удалённого реле"),
								E('div', {class: 'td', style: "text-align: right;"}, [
									this.fields['hostport'].render()
								])
							]),
							E('div', {class: 'tr cbi-rowstyle-2'}, [
								E('div', {class: 'td'}, "Логин"),
								E('div', {class: 'td', style: "text-align: right;"}, [
									this.fields['login'].render()
								])
							]),
							E('div', {class: 'tr cbi-rowstyle-1'}, [
								E('div', {class: 'td'}, "Пароль"),
								E('div', {class: 'td', style: "text-align: right;"}, [
									this.fields['password'].render()
								])
							])
						])
						return this.bind(container);
					},


					/** @private */
					bind: function(container) {
						this.node = container
						var self = this
						dom.bindClassInstance(container, this);

						// Cusom override:
						// We subscribe EventBus event which is emitted by "DropdownProto" widget (see ui_override)
						
						window.EventBus.register(this.node, 'bus-proto-changed', [],
							function(ev) {
								if(ev.detail["proto"] == self.proto) {
									container.classList.add("active")
									self.isActive = true
								} else {
									container.classList.remove("active")
									self.isActive = false
								}
							}
						);
						return container;
					},

					// {
					//	"fieldname": "value"
					// }
					getValue: function() {
						var data = {}
						for (var name in this.fields) {
							data[name] = this.fields[name].getValue() || ''
						}
						return data;
					},

					// if user filled in protocol at first time, then
					// we need to prepare uci section initially
					addSection: function() {
						var sec = uci.get(this.config, this.adapter_id)
						if(sec == null) {
							sec = uci.add(this.config, "http", this.adapter_id)	
							sec = uci.get(this.config, this.adapter_id)
						}
						return(sec)
					},

				});
				ui["netping_luci_relay_adapter_http"] = UIAdapterHTTP;
			});
		});
	});
});
//]]>
</script>